// plugins {
// 	id 'org.springframework.boot' version '2.5.2'
// 	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
// 	id 'org.asciidoctor.convert' version '1.5.8'
// 	id 'java'
// }

// group = 'com.example'
// version = '0.0.1-SNAPSHOT'
// sourceCompatibility = '11'

// configurations {
// 	compileOnly {
// 		extendsFrom annotationProcessor
// 	}
// }

// repositories {
// 	mavenCentral()
// }

// asciidoctor {
// 	sourceDir 'src/main/asciidoc'
// 	attributes \
// 		'snippets': file('target/snippets')
// }

// dependencies {
// 	implementation 'org.springframework.boot:spring-boot-starter-actuator'
// 	implementation 'org.springframework.boot:spring-boot-starter-batch'
// 	implementation 'org.springframework.boot:spring-boot-starter-cache'
// 	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
// 	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
// 	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
// 	implementation 'org.springframework.boot:spring-boot-starter-mail'
// 	// implementation 'org.springframework.boot:spring-boot-starter-security' 
// 	implementation 'org.springframework.boot:spring-boot-starter-validation'
// 	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
// 	implementation 'org.springframework.boot:spring-boot-starter-web'
// 	implementation 'org.springframework.boot:spring-boot-starter-websocket'
// 	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
// 	implementation 'org.springframework.session:spring-session-core'
// 	compileOnly 'org.projectlombok:lombok'
// 	developmentOnly 'org.springframework.boot:spring-boot-devtools'
// 	runtimeOnly 'com.h2database:h2'
// 	runtimeOnly 'com.ibm.db2:jcc'
// 	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
// 	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
// 	runtimeOnly 'mysql:mysql-connector-java'
// 	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
// 	runtimeOnly 'org.postgresql:postgresql'
// 	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
// 	annotationProcessor 'org.projectlombok:lombok'
// 	testImplementation 'org.springframework.boot:spring-boot-starter-test'
// 	testImplementation 'org.springframework.batch:spring-batch-test'
// 	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
// 	// testImplementation 'org.springframework.security:spring-security-test'
// 	// testCompile 'com.jayway.jsonpath:json-path'  
// 	testImplementation 'org.apache.httpcomponents:httpclient'
// }

// test {
// 	useJUnitPlatform()
// } 
plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'com.vaadin' version '0.14.6.0'
	id 'java'
	id 'org.springframework.experimental.aot' version '0.10.1'
	id 'org.graalvm.buildtools.native' version '0.9.1'
	id 'org.hibernate.orm'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url 'https://repo.spring.io/release' }
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('vaadinVersion', "14.6.5")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-groovy-templates'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-jersey'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'com.vaadin:vaadin-spring-boot-starter'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
	implementation 'org.springframework.data:spring-data-rest-hal-explorer'
	implementation 'org.springframework.integration:spring-integration-amqp'
	implementation 'org.springframework.integration:spring-integration-http'
	implementation 'org.springframework.integration:spring-integration-jdbc'
	implementation 'org.springframework.integration:spring-integration-jpa'
	implementation 'org.springframework.integration:spring-integration-kafka'
	implementation 'org.springframework.integration:spring-integration-mail'
	implementation 'org.springframework.integration:spring-integration-security'
	implementation 'org.springframework.integration:spring-integration-stomp'
	implementation 'org.springframework.integration:spring-integration-webflux'
	implementation 'org.springframework.integration:spring-integration-websocket'
	implementation 'org.springframework.integration:spring-integration-ws'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.session:spring-session-jdbc'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.ibm.db2:jcc'
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'org.apache.derby:derby'
	runtimeOnly 'org.hsqldb:hsqldb'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.integration:spring-integration-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
	}
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

bootBuildImage {
	builder = 'paketobuildpacks/builder:tiny'
	environment = ['BP_NATIVE_IMAGE': 'true']
}

hibernate {
	enhance {
		enableLazyInitialization = true
		enableDirtyTracking = true
		enableAssociationManagement = true
		enableExtendedEnhancement = false
	}
}
